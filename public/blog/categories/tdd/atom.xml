<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tdd | @zlu]]></title>
  <link href="http://www.zlu.me/blog/categories/tdd/atom.xml" rel="self"/>
  <link href="http://www.zlu.me/"/>
  <updated>2012-07-19T16:40:58-07:00</updated>
  <id>http://www.zlu.me/</id>
  <author>
    <name><![CDATA[Zhao Lu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RSpec Arbitrary Handling of Arguments]]></title>
    <link href="http://www.zlu.me/blog/2012/02/12/rspec-arbitrary-handling-of-arguments/"/>
    <updated>2012-02-12T19:32:00-08:00</updated>
    <id>http://www.zlu.me/blog/2012/02/12/rspec-arbitrary-handling-of-arguments</id>
    <content type="html"><![CDATA[<p>RSpec lets you test the number, type, and order of arguments.  For example,</p>

<p>{% codeblock lang:ruby %}
Foo.should_receive(:bar).with(1, kind_of(Hash), anything())
Foo.bar(1, {'a' => 'b'}, &amp;b)
{% endcodeblock %}
Pass!</p>

<p>This tests that class method <strong>bar</strong> will be called against class <strong>Foo</strong> with 3 arguments.  The first argument is integer 1,
the second argument is an instance of Hash, the third argument can be anything.</p>

<p>What if you want to test a bit more on the argument than that?</p>

<p>For example, in order to test a <a href="https://github.com/ryanb/private_pub">private_pub</a> method <strong>publish_to</strong>:</p>

<p>{% codeblock lang:ruby %}
PrivatePub.should_receive(:publish_to) do |channel, data|
  channel.should eq 'messages/new'
  data[:foo].should eq 'foo'
end
PrivatePub.publish_to['messages/new', {:foo => 'foo'}
{% endcodeblock %}
Pass!</p>

<p>This tests that <strong>publish_to</strong> takes 2 arguments.  The first is channel and should be equal to 'messages/new'.
The second is a hash and it equals to {:foo => 'foo'}</p>
]]></content>
  </entry>
  
</feed>
