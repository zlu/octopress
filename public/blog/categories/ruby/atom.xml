<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | @zlu]]></title>
  <link href="http://www.zlu.me/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://www.zlu.me/"/>
  <updated>2013-01-12T10:13:18+08:00</updated>
  <id>http://www.zlu.me/</id>
  <author>
    <name><![CDATA[Zhao Lu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Housekeeping RVM]]></title>
    <link href="http://www.zlu.me/blog/2012/11/10/housekeeping-rvm/"/>
    <updated>2012-11-10T18:13:00+08:00</updated>
    <id>http://www.zlu.me/blog/2012/11/10/housekeeping-rvm</id>
    <content type="html"><![CDATA[<p>When a new version of Ruby comes out, I like to use RVM to install it, migrate ruby gems to new ruby, and remove the
older version of ruby.  This prevent the disk bloated with different versions of Rubies and duplicate gem(sets).</p>

<p>First, always update the RVM because it'll also update known list of Ruby.</p>

<p><code>bash
rvm get stable
</code></p>

<p>Then list known versions of Rubies</p>

<p>``` bash
rvm list known</p>

<p>...
[ruby-]1.9.3-p286
[ruby-]1.9.3-[p327]
[ruby-]1.9.3-head
[ruby-]2.0.0-preview1
...
```</p>

<p>The output shows abridged result since the full list is long.  I currently have p286 installed and I'm about to install p327
because it contains a security fix for DoS attack in p286.</p>

<p><code>bash
rvm install 1.9.3
</code></p>

<p>Since p327 is the default stable version (as indicated by []), the command above is sufficient.</p>

<p>Now you can migrate the gem(sets)</p>

<p><code>bash
rvm migrate 1.9.3-p286 1.9.3-p327
</code></p>

<p>As part of the migration, you could opt to remove old ruby version.  Then check the disk usage:</p>

<p><code>bash
rvm disk-usage all
</code></p>

<h2>Note</h2>

<p><a href="https://github.com/wayneeseguin/rvm">RVM</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Segmentation fault with Rails and JSON]]></title>
    <link href="http://www.zlu.me/blog/2012/10/16/segmentation-fault-with-rails-and-json/"/>
    <updated>2012-10-16T21:03:00+08:00</updated>
    <id>http://www.zlu.me/blog/2012/10/16/segmentation-fault-with-rails-and-json</id>
    <content type="html"><![CDATA[<p>After manually cleaning Ruby gems on my system, I got this error running <code>rails c</code> or <code>rails s</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;zlu@zlu-mba:~/projects/foo <span class="o">(</span>master *<span class="o">)</span><span class="nv">$ </span>rails c
</span><span class='line'>/Users/zlu/.rvm/gems/ruby-1.9.3-p0/gems/json-1.7.5/lib/json/ext/parser.bundle: <span class="o">[</span>BUG<span class="o">]</span> Segmentation fault
</span><span class='line'>ruby 1.8.7 <span class="o">(</span>2012-02-08 patchlevel 358<span class="o">)</span> <span class="o">[</span>universal-darwin12.0<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Abort <span class="nb">trap</span>: 6&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>It is very weird if you think about it.  The <code>ruby -v</code> shows that the system is using ruby version 1.9.3 managed by rvm.
But the error shows ruby 1.8.7!  It must be something I did with uninstalling versions of gems where executable requirements got messed up.</p>

<p>Instead of imploding rvm, here's what I did to correct the problem.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;gem list | cut -d<span class="s2">&quot; &quot;</span> -f1 | xargs gem uninstall -aIx
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The first command uninstalls all the gems, including bundler.
After reinstalling bundler, you can run <code>bundle install</code>, assuming you are in a project directory where Gemfile.lock exists.</p>
]]></content>
  </entry>
  
</feed>
