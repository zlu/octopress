<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Agile | @zlu]]></title>
  <link href="http://www.zlu.me/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://www.zlu.me/"/>
  <updated>2012-10-30T00:33:49-07:00</updated>
  <id>http://www.zlu.me/</id>
  <author>
    <name><![CDATA[Zhao Lu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TDD by Jim Weirich]]></title>
    <link href="http://www.zlu.me/blog/2012/05/13/tdd-by-jim-weirich/"/>
    <updated>2012-05-13T18:28:00-07:00</updated>
    <id>http://www.zlu.me/blog/2012/05/13/tdd-by-jim-weirich</id>
    <content type="html"><![CDATA[<p>I invited Jim Weirich to give us a week-long training on TDD/BDD/Agile.  Here're the raw notes.</p>

<p>The way of Testivus</p>

<p>Code driven from tests are more composable</p>

<p>RSpec - Focus on Behavior</p>

<p>Avoid testing state</p>

<p>As a client, I don't care about internal member variables or implementations, I only care about the result.</p>

<p>Reveal our intentions</p>

<p>Focus on the design</p>

<p>Forget unit, describe context</p>

<p>context is an alias to describe</p>

<p>describe/context is equivalent to creating a class of the object and behavior being described/contexted.
  class DescribeRing . . end
  class ContextWhenEmpty . . end
Also class inherits from top-level class
Why helper methods should be in various levels (nesting) of tests</p>

<p>predicate - any method ends with ?</p>

<p>be/equal => object identity</p>

<p>eql or == is structural equality</p>

<p>let(:symbol) { } creates a named method identified by :symbol.  When referred, the block will be executed exactly once.</p>

<p>Implicit subject</p>

<p>its(:symbol) {  should be_true }
specify is a 'kind of' its</p>

<p>Given/When/Then</p>

<p>rspec differentiate mocks and stubs.  stubs doesn't have to be called while mocks have to be at least once.
constraints are should_recieve, once, etc.
actions are and_return</p>

<p>stubs don't care how many times you call it or parameters passed in</p>

<p>Flatten the cost of change in software engineering - how?
  The key is to increase feedback</p>

<p>YAGNI - You ain't going to need it #Agile - No speculative coding!</p>

<p>What is simple?
  Passes all the tests
  Reveals the intention of the developer
  No Duplication
  Fewest huber of classes or methods</p>

<p>Collective Ownership</p>

<p>Sustainable Pace (40-hr work week in America)</p>

<p>Initial Importance
  Must/Should/Could/Won't
  Do high value and high risk stories first</p>
]]></content>
  </entry>
  
</feed>
